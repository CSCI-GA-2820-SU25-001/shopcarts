apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  creationTimestamp: '2025-08-04T16:03:14Z'
  generation: 30
  managedFields:
    - apiVersion: tekton.dev/v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          .: {}
          'f:finally': {}
          'f:params': {}
          'f:tasks': {}
          'f:workspaces': {}
      manager: Mozilla
      operation: Update
      time: '2025-08-04T20:09:46Z'
  name: shopcarts-pipeline
  namespace: alex-s-3-dev
  resourceVersion: '2228089992'
  uid: e5ea2d12-eebf-402b-afb5-9dde41d3de4b
spec:
  params:
    - default: 'https://github.com/CSCI-GA-2820-SU25-001/shopcarts.git'
      description: The URL for the git repo
      name: GIT_REPO
      type: string
    - default: master
      description: The reference
      name: GIT_REF
      type: string
    - default: shopcarts
      description: The name of the application
      name: APP_NAME
      type: string
    - default: 'image-registry.openshift-image-registry.svc:5000/alex-s-3-dev/$(params.APP_NAME):latest'
      description: The name of the image registry
      name: IMAGE_NAME
      type: string
    - description: Base URL of deployed app
      name: APP_URL
      type: string
  tasks:
    - name: clone
      params:
        - name: CRT_FILENAME
          value: ca-bundle.crt
        - name: HTTP_PROXY
          value: ''
        - name: HTTPS_PROXY
          value: ''
        - name: NO_PROXY
          value: ''
        - name: SUBDIRECTORY
          value: ''
        - name: USER_HOME
          value: /home/git
        - name: DELETE_EXISTING
          value: 'true'
        - name: VERBOSE
          value: 'false'
        - name: SSL_VERIFY
          value: 'true'
        - name: URL
          value: $(params.GIT_REPO)
        - name: REVISION
          value: $(params.GIT_REF)
        - name: REFSPEC
          value: ''
        - name: SUBMODULES
          value: 'true'
        - name: DEPTH
          value: '1'
        - name: SPARSE_CHECKOUT_DIRECTORIES
          value: ''
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: git-clone-1-19-0
          - name: namespace
            value: openshift-pipelines
        resolver: cluster
      workspaces:
        - name: output
          workspace: pipeline-workspace
    - name: deploy
      params:
        - name: image-name
          value: $(params.IMAGE_NAME)
      runAfter:
        - build
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: deploy-image
          - name: namespace
            value: alex-s-3-dev
        resolver: cluster
      workspaces:
        - name: output
          workspace: pipeline-workspace
    - name: lint
      params:
        - name: path
          value: service
      runAfter:
        - clone
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: pylint-1
          - name: namespace
            value: alex-s-3-dev
        resolver: cluster
      workspaces:
        - name: output
          workspace: pipeline-workspace
    - name: test
      params:
        - name: pytest-args
          value:
            - '--pspec'
            - '--cov=service'
            - '--cov-fail-under=95'
        - name: secret-name
          value: postgres-creds
        - name: secret-key
          value: database_uri
      runAfter:
        - clone
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: pytest-env-1
          - name: namespace
            value: alex-s-3-dev
        resolver: cluster
      workspaces:
        - name: output
          workspace: pipeline-workspace
    - name: build
      params:
        - name: IMAGE
          value: $(params.IMAGE_NAME)
        - name: STORAGE_DRIVER
          value: vfs
        - name: DOCKERFILE
          value: ./Dockerfile
        - name: CONTEXT
          value: .
        - name: TLS_VERIFY
          value: 'true'
        - name: FORMAT
          value: oci
        - name: BUILD_EXTRA_ARGS
          value: ''
        - name: PUSH_EXTRA_ARGS
          value: ''
        - name: SKIP_PUSH
          value: 'false'
      runAfter:
        - lint
        - test
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: buildah
          - name: namespace
            value: alex-s-3-dev
        resolver: cluster
      workspaces:
        - name: output
          workspace: pipeline-workspace
    - name: behave
      params:
        - name: path
          value: repo/features
        - name: base-url
          value: $(params.APP_URL)
      runAfter:
        - deploy
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: behave-1
          - name: namespace
            value: alex-s-3-dev
        resolver: cluster
      workspaces:
        - name: output
          workspace: pipeline-workspace
  workspaces:
    - name: pipeline-workspace
